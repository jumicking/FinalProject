/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package malilong.pkgfinal.project;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yuanb
 */
public class BorrowerLog extends javax.swing.JFrame {

    DefaultTableModel model;

    public BorrowerLog() {
        initComponents();
        model = (DefaultTableModel) BorrowersLog.getModel();
        model.setRowCount(0);
        LoadTable();
    }

    void LoadTable() {

        model.setRowCount(0);
        DBconnection.init();
        Connection c = DBconnection.getConnection();

        try {
            PreparedStatement ps = c.prepareStatement("SELECT * FROM borrowerslog");
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {

                model.addRow(new Object[]{rs.getString("date"), rs.getString("bookreference"), rs.getString("bookname"), rs.getString("borrowersname"), rs.getString("borrowerscontact"), rs.getString("Remarks")});

            }

        } catch (SQLException ex) {
            Logger.getLogger(BorrowerLog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void ReturnBook(String Username, String BookRef) {
        DBconnection.init();
        try {
            Connection c = DBconnection.getConnection();

            PreparedStatement ps = c.prepareStatement(
                    "UPDATE " + Username + " set remarks = ? WHERE reference = ?"
            );
            LocalDateTime now = LocalDateTime.now();
            String formatted = now.format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"));

            ps.setString(1, "Returned");
            ps.setString(2, BookRef);
            ps.executeUpdate();
            ps.close();
            ps = c.prepareStatement(
                    "UPDATE borrowerslog set Remarks = ? WHERE bookreference = ? "
            );
            ps.setString(1, "Returned");
            ps.setString(2, BookRef);
            ps.executeUpdate();
            ps.close();

            // âœ… Step 4: Decrease count in inventory
            ps = c.prepareStatement("SELECT borrowed FROM inventory WHERE bookreference = ?");
            ps.setString(1, BookRef);
            ResultSet rs = ps.executeQuery();

            int borrowed = 0;
            if (rs.next()) {
                borrowed = rs.getInt("borrowed");
            }
            rs.close();
            ps.close();

            int updatedBorrowed = Math.max(borrowed - 1, 0); 
            ps = c.prepareStatement("UPDATE inventory SET borrowed = ? WHERE bookreference = ?");
            ps.setInt(1, updatedBorrowed);
            ps.setString(2, BookRef);
            ps.executeUpdate();
            ps.close();

            JOptionPane.showMessageDialog(null, "Book successfully returned!");

        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Database error: " + ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        BorrowersLog = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        Bookreference = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Username = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(935, 630));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BorrowersLog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Date", "Reference", "Title", "Name", "Contact", "Remarks"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BorrowersLog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BorrowersLogMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(BorrowersLog);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 900, 402));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("Borrower's Log Book");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, -1, -1));

        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        jLabel2.setText("Reference");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 500, -1, -1));
        getContentPane().add(Bookreference, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 520, 260, -1));

        jLabel3.setText("Username");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 550, -1, -1));
        getContentPane().add(Username, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 570, 260, -1));

        jButton2.setText("Return Book");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 520, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Librarian open = new Librarian();
        open.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BorrowersLogMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BorrowersLogMouseClicked
        try {
            if (evt.getClickCount() == 2) {
                int selected = BorrowersLog.getSelectedRow();
                if (selected != -1) {
                    String getref = BorrowersLog.getValueAt(selected, 1).toString();

                    Bookreference.setText(getref);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error loading selected book: " + e.getMessage());
        }
    }//GEN-LAST:event_BorrowersLogMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String Refer = Bookreference.getText();
        String Account = Username.getText();
        
        if (Refer.isEmpty() || Account.isEmpty()){
            JOptionPane.showMessageDialog(null, "Fill the information correctly!");
        } else {
            ReturnBook(Account, Refer);
            LoadTable();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BorrowerLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BorrowerLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BorrowerLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BorrowerLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BorrowerLog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Bookreference;
    private javax.swing.JTable BorrowersLog;
    private javax.swing.JTextField Username;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
